{"version":3,"sources":["utils/getTime.js","data/CountryNameMapping.js","assets/loader.gif","components/Loading.js","components/CountryPage.js","components/Buttons.js","components/MapChart.js","data/CountryISOMapping.js","components/CountryCard.js","components/Ranking.js","data/SampleData.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["getTime","data","Years","pluralize","Months","Days","text","count","CountryNameMapping","AFG","ALA","ALB","DZA","ASM","AND","AGO","AIA","ATA","ATG","ARG","ARM","ABW","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BMU","BTN","BOL","BES","BIH","BWA","BVT","BRA","IOT","BRN","BGR","BFA","BDI","CPV","KHM","CMR","CAN","CYM","CAF","TCD","CHL","CHN","CXR","CCK","COL","COM","COG","COD","COK","CRI","CIV","HRV","CUB","CUW","CYP","CZE","DNK","DJI","DMA","DOM","ECU","EGY","SLV","GNQ","ERI","EST","SWZ","ETH","FLK","FRO","FJI","FIN","FRA","GUF","PYF","ATF","GAB","GMB","GEO","DEU","GHA","GIB","GRC","GRL","GRD","GLP","GUM","GTM","GGY","GIN","GNB","GUY","HTI","HMD","VAT","HND","HKG","HUN","ISL","IND","IDN","IRN","IRQ","IRL","IMN","ISR","ITA","JAM","JPN","JEY","JOR","KAZ","KEN","KIR","PRK","KOR","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LIE","LTU","LUX","MAC","MDG","MWI","MYS","MDV","MLI","MLT","MHL","MTQ","MRT","MUS","MYT","MEX","FSM","MDA","MCO","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","NCL","NZL","NIC","NER","NGA","NIU","NFK","MKD","MNP","NOR","OMN","PAK","PLW","PSE","PAN","PNG","PRY","PER","PHL","PCN","POL","PRT","PRI","QAT","REU","ROU","RUS","RWA","BLM","SHN","KNA","LCA","MAF","SPM","VCT","WSM","SMR","STP","SAU","SEN","SRB","SYC","SLE","SGP","SXM","SVK","SVN","SLB","SOM","ZAF","SGS","SSD","ESP","LKA","SDN","SUR","SJM","SWE","CHE","SYR","TWN","TJK","TZA","THA","TLS","TGO","TKL","TON","TTO","TUN","TUR","TKM","TCA","TUV","UGA","UKR","ARE","GBR","USA","UMI","URY","UZB","VUT","VEN","VNM","VGB","VIR","WLF","ESH","YEM","ZMB","ZWE","Loading","className","src","loader","alt","CountryPage","iso3","useParams","url","useState","loading","setLoading","JSON","parse","localStorage","getItem","country","setCountry","useEffect","name","ISO3","fetch","then","res","json","result","fullCountry","find","itmInner","alpha3Code","setItem","stringify","error","console","log","details","content","nativeName","population","toLocaleString","region","subregion","capital","languages","length","reduce","acc","lang","currencies","curr","code","symbol","flag","map","detail","i","borders","border","to","Buttons","topN","setTopN","title","val","button","index","onClick","disabled","colorScale","scaleLinear","domain","range","MapChart","setTooltipContent","travelData","width","height","data-tip","projectionConfig","rotate","scale","geography","stroke","strokeWidth","geographies","geo","row","s","properties","ISO_A3","fill","onMouseEnter","NAME","onMouseLeave","style","hover","outline","pressed","rsmKey","memo","CountryISOMapping","ANT","XKX","CountryCard","rank","totalDays","flag_filename","toLowerCase","time","toFixed","Ranking","countries","parseInt","slice","SampleData","HomePage","setContent","setData","CSVFormatError","setCSVFormatError","loadData","merged","push","num","removeItem","onFileLoaded","fileInfo","parserOptions","header","label","cssLabelClass","App","process","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bdfdd14c.chunk.js","sourcesContent":["export const getTime = (data) => {\r\n  const years =\r\n    data && data.Years ? pluralize(` ${data.Years} year`, data.Years) : \"\";\r\n  const months =\r\n    data && data.Months && data.Months !== \"0\" ? pluralize(` ${data.Months} month`, data.Months) : \"\";\r\n  const days = data\r\n    ? data.Days === \"0\"\r\n      ? \"\"\r\n      : pluralize(` ${data.Days} day`, data.Days)\r\n    : \" 0 days\";\r\n  const time = years + months + days;\r\n  return time;\r\n};\r\n\r\nconst pluralize = (text, count) => {\r\n  return count > 1 ? `${text}s` : text;\r\n};\r\n","export const CountryNameMapping = {\r\n  AFG: \"Afghanistan\",\r\n  ALA: \"Åland Islands\",\r\n  ALB: \"Albania\",\r\n  DZA: \"Algeria\",\r\n  ASM: \"American Samoa\",\r\n  AND: \"Andorra\",\r\n  AGO: \"Angola\",\r\n  AIA: \"Anguilla\",\r\n  ATA: \"Antarctica\",\r\n  ATG: \"Antigua and Barbuda\",\r\n  ARG: \"Argentina\",\r\n  ARM: \"Armenia\",\r\n  ABW: \"Aruba\",\r\n  AUS: \"Australia\",\r\n  AUT: \"Austria\",\r\n  AZE: \"Azerbaijan\",\r\n  BHS: \"Bahamas\",\r\n  BHR: \"Bahrain\",\r\n  BGD: \"Bangladesh\",\r\n  BRB: \"Barbados\",\r\n  BLR: \"Belarus\",\r\n  BEL: \"Belgium\",\r\n  BLZ: \"Belize\",\r\n  BEN: \"Benin\",\r\n  BMU: \"Bermuda\",\r\n  BTN: \"Bhutan\",\r\n  BOL: \"Bolivia\",\r\n  BES: \"Bonaire, Sint Eustatius and Saba\",\r\n  BIH: \"Bosnia and Herzegovina\",\r\n  BWA: \"Botswana\",\r\n  BVT: \"Bouvet Island\",\r\n  BRA: \"Brazil\",\r\n  IOT: \"British Indian Ocean Territory\",\r\n  BRN: \"Brunei Darussalam\",\r\n  BGR: \"Bulgaria\",\r\n  BFA: \"Burkina Faso\",\r\n  BDI: \"Burundi\",\r\n  CPV: \"Cabo Verde\",\r\n  KHM: \"Cambodia\",\r\n  CMR: \"Cameroon\",\r\n  CAN: \"Canada\",\r\n  CYM: \"Cayman Islands\",\r\n  CAF: \"Central African Republic\",\r\n  TCD: \"Chad\",\r\n  CHL: \"Chile\",\r\n  CHN: \"China\",\r\n  CXR: \"Christmas Island\",\r\n  CCK: \"Cocos (Keeling) Islands\",\r\n  COL: \"Colombia\",\r\n  COM: \"Comoros\",\r\n  COG: \"Congo\",\r\n  COD: \"Congo, Democratic Republic of the\",\r\n  COK: \"Cook Islands\",\r\n  CRI: \"Costa Rica\",\r\n  CIV: \"Côte d'Ivoire\",\r\n  HRV: \"Croatia\",\r\n  CUB: \"Cuba\",\r\n  CUW: \"Curaçao\",\r\n  CYP: \"Cyprus\",\r\n  CZE: \"Czechia\",\r\n  DNK: \"Denmark\",\r\n  DJI: \"Djibouti\",\r\n  DMA: \"Dominica\",\r\n  DOM: \"Dominican Republic\",\r\n  ECU: \"Ecuador\",\r\n  EGY: \"Egypt\",\r\n  SLV: \"El Salvador\",\r\n  GNQ: \"Equatorial Guinea\",\r\n  ERI: \"Eritrea\",\r\n  EST: \"Estonia\",\r\n  SWZ: \"Eswatini\",\r\n  ETH: \"Ethiopia\",\r\n  FLK: \"Falkland Islands (Malvinas)\",\r\n  FRO: \"Faroe Islands\",\r\n  FJI: \"Fiji\",\r\n  FIN: \"Finland\",\r\n  FRA: \"France\",\r\n  GUF: \"French Guiana\",\r\n  PYF: \"French Polynesia\",\r\n  ATF: \"French Southern Territories\",\r\n  GAB: \"Gabon\",\r\n  GMB: \"Gambia\",\r\n  GEO: \"Georgia\",\r\n  DEU: \"Germany\",\r\n  GHA: \"Ghana\",\r\n  GIB: \"Gibraltar\",\r\n  GRC: \"Greece\",\r\n  GRL: \"Greenland\",\r\n  GRD: \"Grenada\",\r\n  GLP: \"Guadeloupe\",\r\n  GUM: \"Guam\",\r\n  GTM: \"Guatemala\",\r\n  GGY: \"Guernsey\",\r\n  GIN: \"Guinea\",\r\n  GNB: \"Guinea-Bissau\",\r\n  GUY: \"Guyana\",\r\n  HTI: \"Haiti\",\r\n  HMD: \"Heard Island and McDonald Islands\",\r\n  VAT: \"Holy See\",\r\n  HND: \"Honduras\",\r\n  HKG: \"Hong Kong\",\r\n  HUN: \"Hungary\",\r\n  ISL: \"Iceland\",\r\n  IND: \"India\",\r\n  IDN: \"Indonesia\",\r\n  IRN: \"Iran (Islamic Republic of)\",\r\n  IRQ: \"Iraq\",\r\n  IRL: \"Ireland\",\r\n  IMN: \"Isle of Man\",\r\n  ISR: \"Israel\",\r\n  ITA: \"Italy\",\r\n  JAM: \"Jamaica\",\r\n  JPN: \"Japan\",\r\n  JEY: \"Jersey\",\r\n  JOR: \"Jordan\",\r\n  KAZ: \"Kazakhstan\",\r\n  KEN: \"Kenya\",\r\n  KIR: \"Kiribati\",\r\n  PRK: \"Korea (Democratic People's Republic of)\",\r\n  KOR: \"Korea, Republic of\",\r\n  KWT: \"Kuwait\",\r\n  KGZ: \"Kyrgyzstan\",\r\n  LAO: \"Lao People's Democratic Republic\",\r\n  LVA: \"Latvia\",\r\n  LBN: \"Lebanon\",\r\n  LSO: \"Lesotho\",\r\n  LBR: \"Liberia\",\r\n  LBY: \"Libya\",\r\n  LIE: \"Liechtenstein\",\r\n  LTU: \"Lithuania\",\r\n  LUX: \"Luxembourg\",\r\n  MAC: \"Macao\",\r\n  MDG: \"Madagascar\",\r\n  MWI: \"Malawi\",\r\n  MYS: \"Malaysia\",\r\n  MDV: \"Maldives\",\r\n  MLI: \"Mali\",\r\n  MLT: \"Malta\",\r\n  MHL: \"Marshall Islands\",\r\n  MTQ: \"Martinique\",\r\n  MRT: \"Mauritania\",\r\n  MUS: \"Mauritius\",\r\n  MYT: \"Mayotte\",\r\n  MEX: \"Mexico\",\r\n  FSM: \"Micronesia (Federated States of)\",\r\n  MDA: \"Moldova, Republic of\",\r\n  MCO: \"Monaco\",\r\n  MNG: \"Mongolia\",\r\n  MNE: \"Montenegro\",\r\n  MSR: \"Montserrat\",\r\n  MAR: \"Morocco\",\r\n  MOZ: \"Mozambique\",\r\n  MMR: \"Myanmar\",\r\n  NAM: \"Namibia\",\r\n  NRU: \"Nauru\",\r\n  NPL: \"Nepal\",\r\n  NLD: \"Netherlands\",\r\n  NCL: \"New Caledonia\",\r\n  NZL: \"New Zealand\",\r\n  NIC: \"Nicaragua\",\r\n  NER: \"Niger\",\r\n  NGA: \"Nigeria\",\r\n  NIU: \"Niue\",\r\n  NFK: \"Norfolk Island\",\r\n  MKD: \"North Macedonia\",\r\n  MNP: \"Northern Mariana Islands\",\r\n  NOR: \"Norway\",\r\n  OMN: \"Oman\",\r\n  PAK: \"Pakistan\",\r\n  PLW: \"Palau\",\r\n  PSE: \"Palestine, State of\",\r\n  PAN: \"Panama\",\r\n  PNG: \"Papua New Guinea\",\r\n  PRY: \"Paraguay\",\r\n  PER: \"Peru\",\r\n  PHL: \"Philippines\",\r\n  PCN: \"Pitcairn\",\r\n  POL: \"Poland\",\r\n  PRT: \"Portugal\",\r\n  PRI: \"Puerto Rico\",\r\n  QAT: \"Qatar\",\r\n  REU: \"Réunion\",\r\n  ROU: \"Romania\",\r\n  RUS: \"Russian Federation\",\r\n  RWA: \"Rwanda\",\r\n  BLM: \"Saint Barthélemy\",\r\n  SHN: \"Saint Helena, Ascension and Tristan da Cunha\",\r\n  KNA: \"Saint Kitts and Nevis\",\r\n  LCA: \"Saint Lucia\",\r\n  MAF: \"Saint Martin (French part)\",\r\n  SPM: \"Saint Pierre and Miquelon\",\r\n  VCT: \"Saint Vincent and the Grenadines\",\r\n  WSM: \"Samoa\",\r\n  SMR: \"San Marino\",\r\n  STP: \"Sao Tome and Principe\",\r\n  SAU: \"Saudi Arabia\",\r\n  SEN: \"Senegal\",\r\n  SRB: \"Serbia\",\r\n  SYC: \"Seychelles\",\r\n  SLE: \"Sierra Leone\",\r\n  SGP: \"Singapore\",\r\n  SXM: \"Sint Maarten (Dutch part)\",\r\n  SVK: \"Slovakia\",\r\n  SVN: \"Slovenia\",\r\n  SLB: \"Solomon Islands\",\r\n  SOM: \"Somalia\",\r\n  ZAF: \"South Africa\",\r\n  SGS: \"South Georgia and the South Sandwich Islands\",\r\n  SSD: \"South Sudan\",\r\n  ESP: \"Spain\",\r\n  LKA: \"Sri Lanka\",\r\n  SDN: \"Sudan\",\r\n  SUR: \"Suriname\",\r\n  SJM: \"Svalbard and Jan Mayen\",\r\n  SWE: \"Sweden\",\r\n  CHE: \"Switzerland\",\r\n  SYR: \"Syrian Arab Republic\",\r\n  TWN: \"Taiwan, Province of China\",\r\n  TJK: \"Tajikistan\",\r\n  TZA: \"Tanzania, United Republic of\",\r\n  THA: \"Thailand\",\r\n  TLS: \"Timor-Leste\",\r\n  TGO: \"Togo\",\r\n  TKL: \"Tokelau\",\r\n  TON: \"Tonga\",\r\n  TTO: \"Trinidad and Tobago\",\r\n  TUN: \"Tunisia\",\r\n  TUR: \"Turkey\",\r\n  TKM: \"Turkmenistan\",\r\n  TCA: \"Turks and Caicos Islands\",\r\n  TUV: \"Tuvalu\",\r\n  UGA: \"Uganda\",\r\n  UKR: \"Ukraine\",\r\n  ARE: \"United Arab Emirates\",\r\n  GBR: \"United Kingdom of Great Britain and Northern Ireland\",\r\n  USA: \"United States of America\",\r\n  UMI: \"United States Minor Outlying Islands\",\r\n  URY: \"Uruguay\",\r\n  UZB: \"Uzbekistan\",\r\n  VUT: \"Vanuatu\",\r\n  VEN: \"Venezuela\",\r\n  VNM: \"Viet Nam\",\r\n  VGB: \"Virgin Islands (British)\",\r\n  VIR: \"Virgin Islands (U.S.)\",\r\n  WLF: \"Wallis and Futuna\",\r\n  ESH: \"Western Sahara\",\r\n  YEM: \"Yemen\",\r\n  ZMB: \"Zambia\",\r\n  ZWE: \"Zimbabwe\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/loader.befd2ee9.gif\";","import React from \"react\";\r\nimport loader from \"../assets/loader.gif\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"center\">\r\n      <img src={loader} alt=\"loading...\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { getTime } from \"../utils/getTime\";\r\nimport { CountryNameMapping } from \"../data/CountryNameMapping\";\r\nimport Loading from \"./Loading\";\r\nimport \"../App.css\";\r\nimport \"./CountryPage.css\";\r\n\r\nconst CountryPage = () => {\r\n  let { iso3 } = useParams();\r\n  const url = `https://restcountries.eu/rest/v2/alpha/${iso3}`;\r\n  const [loading, setLoading] = useState(false);\r\n  const [country, setCountry] = useState(\r\n    JSON.parse(localStorage.getItem(iso3)) || {}\r\n  );\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(\"dataSet\")) || [];\r\n    if ((!country && !country.name) || country.ISO3 !== iso3) {\r\n      setLoading(true);\r\n      fetch(url)\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            const fullCountry = {\r\n              ...result,\r\n              ...data.find((itmInner) => itmInner.ISO3 === result.alpha3Code),\r\n            };\r\n            setCountry(fullCountry);\r\n            localStorage.setItem(country.ISO3, JSON.stringify(fullCountry));\r\n            setLoading(false);\r\n          },\r\n          (error) => {\r\n            console.log(\"Error fetching country data: \", error);\r\n            setLoading(false);\r\n          }\r\n        );\r\n    }\r\n  }, [iso3]);\r\n\r\n  const details = country.name\r\n    ? [\r\n        { name: \"Native Name\", content: country.nativeName },\r\n        { name: \"Population\", content: country.population.toLocaleString() },\r\n        { name: \"Region\", content: country.region },\r\n        { name: \"Sub Region\", content: country.subregion },\r\n        { name: \"Capital\", content: country.capital },\r\n        {\r\n          name: country.languages.length > 1 ? \"Languages\" : \"Language\",\r\n          content: country.languages.reduce((acc, lang) => {\r\n            return acc ? `${acc}, ${lang.name}` : lang.name;\r\n          }, \"\"),\r\n        },\r\n        {\r\n          name: country.currencies.length > 1 ? \"Currencies\" : \"Currency\",\r\n          content: country.currencies.reduce((acc, curr) => {\r\n            return acc\r\n              ? `${acc}, ${curr.name} (${curr.code} ${curr.symbol})`\r\n              : `${curr.name} (${curr.code} ${curr.symbol})`;\r\n          }, \"\"),\r\n        },\r\n      ]\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <h1 className=\"center\">\r\n            {country.name ? country.name : \"Country Unavailable\"}\r\n          </h1>\r\n          {country.name && (\r\n            <div className=\"center country-page\">\r\n              <div className=\"full-flag\">\r\n                <img\r\n                  src={country.flag}\r\n                  alt={`${country.name}'s flag`}\r\n                  className=\"full-flag-img\"\r\n                />\r\n              </div>\r\n              <div className=\"country-details\">\r\n                {details.map((detail, i) => (\r\n                  <div className=\"country-detail\" key={i}>\r\n                    <b>{detail.name}:</b> {detail.content}\r\n                  </div>\r\n                ))}\r\n\r\n                <div className=\"country-detail\">\r\n                  <b>Time spent here: </b>\r\n                  {country.Years || country.Months || country.Days\r\n                    ? getTime(country)\r\n                    : \"You have not been here yet!\"}\r\n                </div>\r\n\r\n                <div className=\"border-countries\">\r\n                  <div className=\"border-countries-title\">\r\n                    <b>Border Countries:</b>\r\n                  </div>\r\n                  <div className=\"border-countries-list\">\r\n                    {country.borders.length\r\n                      ? country.borders.map((border, i) => (\r\n                          <Link to={`/country/${border}`} key={i}>\r\n                            <button className=\"button border-country\">\r\n                              {border in CountryNameMapping\r\n                                ? CountryNameMapping[border]\r\n                                : border}\r\n                            </button>\r\n                          </Link>\r\n                        ))\r\n                      : \" None\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <Link to=\"/\">\r\n            <button className=\"button\">{`← Back`}</button>\r\n          </Link>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryPage;\r\n","import React from \"react\";\r\n\r\nconst Buttons = ({ topN, setTopN }) => {\r\n  const buttons = [\r\n    { title: \"Top 3\", val: 3 },\r\n    { title: \"Top 5\", val: 5 },\r\n    { title: \"Top 10\", val: 10 },\r\n    { title: \"Show all\", val: 280 },\r\n  ];\r\n  return (\r\n    <>\r\n      {buttons.map((button, index) => (\r\n        <button\r\n          key={index}\r\n          className=\"button\"\r\n          onClick={() => setTopN(button.val)}\r\n          disabled={topN === button.val}\r\n        >\r\n          {button.title}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React, { memo } from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport { getTime } from \"../utils/getTime\"\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-50m-simplified.json\";\r\n\r\nconst colorScale = scaleLinear()\r\n  .domain([0, 30, 100, 500, 7800])\r\n  .range([\"#ffece8\", \"#ff9280\", \"#ff5233\", \"#ff2700\", \"#47002e\"]);\r\n\r\nconst MapChart = ({ setTooltipContent, travelData }) => {\r\n  const createTooltipContent = (countryName, data) => {\r\n    return `${countryName}:${getTime(data)}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ComposableMap\r\n        width={400}\r\n        height={200}\r\n        data-tip=\"\"\r\n        projectionConfig={{\r\n          rotate: [-10, 0, 0],\r\n          scale: 80,\r\n        }}\r\n      >\r\n        <Geographies geography={geoUrl} stroke=\"#FFFFFF\" strokeWidth={0.2}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const row = travelData.find(\r\n                (s) => s.ISO3 === geo.properties.ISO_A3\r\n              );\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={row ? colorScale(row[\"time\"]) : \"#B8B8B8\"}\r\n                  onMouseEnter={() => {\r\n                    const { NAME } = geo.properties;\r\n                    setTooltipContent(createTooltipContent(NAME, row));\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    hover: {\r\n                      fill: \"#F53\",\r\n                      outline: \"none\",\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"none\",\r\n                    },\r\n                  }}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n","\r\nexport const CountryISOMapping = {\r\n  AFG: \"AF\",\r\n  ALA: \"AX\",\r\n  ALB: \"AL\",\r\n  DZA: \"DZ\",\r\n  ASM: \"AS\",\r\n  AND: \"AD\",\r\n  AGO: \"AO\",\r\n  AIA: \"AI\",\r\n  ATA: \"AQ\",\r\n  ATG: \"AG\",\r\n  ARG: \"AR\",\r\n  ARM: \"AM\",\r\n  ABW: \"AW\",\r\n  AUS: \"AU\",\r\n  AUT: \"AT\",\r\n  AZE: \"AZ\",\r\n  BHS: \"BS\",\r\n  BHR: \"BH\",\r\n  BGD: \"BD\",\r\n  BRB: \"BB\",\r\n  BLR: \"BY\",\r\n  BEL: \"BE\",\r\n  BLZ: \"BZ\",\r\n  BEN: \"BJ\",\r\n  BMU: \"BM\",\r\n  BTN: \"BT\",\r\n  BOL: \"BO\",\r\n  BIH: \"BA\",\r\n  BWA: \"BW\",\r\n  BVT: \"BV\",\r\n  BRA: \"BR\",\r\n  VGB: \"VG\",\r\n  IOT: \"IO\",\r\n  BRN: \"BN\",\r\n  BGR: \"BG\",\r\n  BFA: \"BF\",\r\n  BDI: \"BI\",\r\n  KHM: \"KH\",\r\n  CMR: \"CM\",\r\n  CAN: \"CA\",\r\n  CPV: \"CV\",\r\n  CYM: \"KY\",\r\n  CAF: \"CF\",\r\n  TCD: \"TD\",\r\n  CHL: \"CL\",\r\n  CHN: \"CN\",\r\n  HKG: \"HK\",\r\n  MAC: \"MO\",\r\n  CXR: \"CX\",\r\n  CCK: \"CC\",\r\n  COL: \"CO\",\r\n  COM: \"KM\",\r\n  COG: \"CG\",\r\n  COD: \"CD\",\r\n  COK: \"CK\",\r\n  CRI: \"CR\",\r\n  CIV: \"CI\",\r\n  HRV: \"HR\",\r\n  CUB: \"CU\",\r\n  CYP: \"CY\",\r\n  CZE: \"CZ\",\r\n  DNK: \"DK\",\r\n  DJI: \"DJ\",\r\n  DMA: \"DM\",\r\n  DOM: \"DO\",\r\n  ECU: \"EC\",\r\n  EGY: \"EG\",\r\n  SLV: \"SV\",\r\n  GNQ: \"GQ\",\r\n  ERI: \"ER\",\r\n  EST: \"EE\",\r\n  ETH: \"ET\",\r\n  FLK: \"FK\",\r\n  FRO: \"FO\",\r\n  FJI: \"FJ\",\r\n  FIN: \"FI\",\r\n  FRA: \"FR\",\r\n  GUF: \"GF\",\r\n  PYF: \"PF\",\r\n  ATF: \"TF\",\r\n  GAB: \"GA\",\r\n  GMB: \"GM\",\r\n  GEO: \"GE\",\r\n  DEU: \"DE\",\r\n  GHA: \"GH\",\r\n  GIB: \"GI\",\r\n  GRC: \"GR\",\r\n  GRL: \"GL\",\r\n  GRD: \"GD\",\r\n  GLP: \"GP\",\r\n  GUM: \"GU\",\r\n  GTM: \"GT\",\r\n  GGY: \"GG\",\r\n  GIN: \"GN\",\r\n  GNB: \"GW\",\r\n  GUY: \"GY\",\r\n  HTI: \"HT\",\r\n  HMD: \"HM\",\r\n  VAT: \"VA\",\r\n  HND: \"HN\",\r\n  HUN: \"HU\",\r\n  ISL: \"IS\",\r\n  IND: \"IN\",\r\n  IDN: \"ID\",\r\n  IRN: \"IR\",\r\n  IRQ: \"IQ\",\r\n  IRL: \"IE\",\r\n  IMN: \"IM\",\r\n  ISR: \"IL\",\r\n  ITA: \"IT\",\r\n  JAM: \"JM\",\r\n  JPN: \"JP\",\r\n  JEY: \"JE\",\r\n  JOR: \"JO\",\r\n  KAZ: \"KZ\",\r\n  KEN: \"KE\",\r\n  KIR: \"KI\",\r\n  PRK: \"KP\",\r\n  KOR: \"KR\",\r\n  KWT: \"KW\",\r\n  KGZ: \"KG\",\r\n  LAO: \"LA\",\r\n  LVA: \"LV\",\r\n  LBN: \"LB\",\r\n  LSO: \"LS\",\r\n  LBR: \"LR\",\r\n  LBY: \"LY\",\r\n  LIE: \"LI\",\r\n  LTU: \"LT\",\r\n  LUX: \"LU\",\r\n  MKD: \"MK\",\r\n  MDG: \"MG\",\r\n  MWI: \"MW\",\r\n  MYS: \"MY\",\r\n  MDV: \"MV\",\r\n  MLI: \"ML\",\r\n  MLT: \"MT\",\r\n  MHL: \"MH\",\r\n  MTQ: \"MQ\",\r\n  MRT: \"MR\",\r\n  MUS: \"MU\",\r\n  MYT: \"YT\",\r\n  MEX: \"MX\",\r\n  FSM: \"FM\",\r\n  MDA: \"MD\",\r\n  MCO: \"MC\",\r\n  MNG: \"MN\",\r\n  MNE: \"ME\",\r\n  MSR: \"MS\",\r\n  MAR: \"MA\",\r\n  MOZ: \"MZ\",\r\n  MMR: \"MM\",\r\n  NAM: \"NA\",\r\n  NRU: \"NR\",\r\n  NPL: \"NP\",\r\n  NLD: \"NL\",\r\n  ANT: \"AN\",\r\n  NCL: \"NC\",\r\n  NZL: \"NZ\",\r\n  NIC: \"NI\",\r\n  NER: \"NE\",\r\n  NGA: \"NG\",\r\n  NIU: \"NU\",\r\n  NFK: \"NF\",\r\n  MNP: \"MP\",\r\n  NOR: \"NO\",\r\n  OMN: \"OM\",\r\n  PAK: \"PK\",\r\n  PLW: \"PW\",\r\n  PSE: \"PS\",\r\n  PAN: \"PA\",\r\n  PNG: \"PG\",\r\n  PRY: \"PY\",\r\n  PER: \"PE\",\r\n  PHL: \"PH\",\r\n  PCN: \"PN\",\r\n  POL: \"PL\",\r\n  PRT: \"PT\",\r\n  PRI: \"PR\",\r\n  QAT: \"QA\",\r\n  REU: \"RE\",\r\n  ROU: \"RO\",\r\n  RUS: \"RU\",\r\n  RWA: \"RW\",\r\n  BLM: \"BL\",\r\n  SHN: \"SH\",\r\n  KNA: \"KN\",\r\n  LCA: \"LC\",\r\n  MAF: \"MF\",\r\n  SPM: \"PM\",\r\n  VCT: \"VC\",\r\n  WSM: \"WS\",\r\n  SMR: \"SM\",\r\n  STP: \"ST\",\r\n  SAU: \"SA\",\r\n  SEN: \"SN\",\r\n  SRB: \"RS\",\r\n  SYC: \"SC\",\r\n  SLE: \"SL\",\r\n  SGP: \"SG\",\r\n  SVK: \"SK\",\r\n  SVN: \"SI\",\r\n  SLB: \"SB\",\r\n  SOM: \"SO\",\r\n  ZAF: \"ZA\",\r\n  SGS: \"GS\",\r\n  SSD: \"SS\",\r\n  ESP: \"ES\",\r\n  LKA: \"LK\",\r\n  SDN: \"SD\",\r\n  SUR: \"SR\",\r\n  SJM: \"SJ\",\r\n  SWZ: \"SZ\",\r\n  SWE: \"SE\",\r\n  CHE: \"CH\",\r\n  SYR: \"SY\",\r\n  TWN: \"TW\",\r\n  TJK: \"TJ\",\r\n  TZA: \"TZ\",\r\n  THA: \"TH\",\r\n  TLS: \"TL\",\r\n  TGO: \"TG\",\r\n  TKL: \"TK\",\r\n  TON: \"TO\",\r\n  TTO: \"TT\",\r\n  TUN: \"TN\",\r\n  TUR: \"TR\",\r\n  TKM: \"TM\",\r\n  TCA: \"TC\",\r\n  TUV: \"TV\",\r\n  UGA: \"UG\",\r\n  UKR: \"UA\",\r\n  ARE: \"AE\",\r\n  GBR: \"GB\",\r\n  USA: \"US\",\r\n  UMI: \"UM\",\r\n  URY: \"UY\",\r\n  UZB: \"UZ\",\r\n  VUT: \"VU\",\r\n  VEN: \"VE\",\r\n  VNM: \"VN\",\r\n  VIR: \"VI\",\r\n  WLF: \"WF\",\r\n  ESH: \"EH\",\r\n  YEM: \"YE\",\r\n  ZMB: \"ZM\",\r\n  ZWE: \"ZW\",\r\n  XKX: \"XK\"\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { CountryISOMapping } from \"../data/CountryISOMapping\";\r\nimport { getTime } from \"../utils/getTime\";\r\nimport \"../App.css\";\r\n\r\nconst CountryCard = ({ rank, country, totalDays }) => {\r\n  const flag_filename = `https://flagcdn.com/h240/${CountryISOMapping[\r\n    country.ISO3\r\n  ].toLowerCase()}.png`;\r\n  return (\r\n    <Link\r\n      to={`/country/${country.ISO3}`}\r\n      onClick={() =>\r\n        localStorage.setItem(country.ISO3, JSON.stringify(country))\r\n      }\r\n    >\r\n      <div className=\"card\">\r\n        <div className=\"flag-container\">\r\n          <img\r\n            className=\"flag\"\r\n            src={flag_filename}\r\n            alt={`${country.name}'s flag`}\r\n          />\r\n        </div>\r\n        <div className=\"card-container\">\r\n          <h4>\r\n            <b>\r\n              {rank}. {country.name}\r\n            </b>\r\n          </h4>\r\n\r\n          <div className=\"card-detail\">\r\n            <b>Region:</b> {country.region}\r\n          </div>\r\n          <div className=\"card-detail\">\r\n            <b>Capital:</b> {country.capital}\r\n          </div>\r\n          <div className=\"card-detail\">\r\n            <b>Time: </b>\r\n            {getTime(country)}\r\n          </div>\r\n          <div className=\"percentage\">\r\n            That's {((100 * country.time) / totalDays).toFixed(2)}% of your life\r\n            here!\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n","import React from \"react\";\r\nimport ContryCard from \"./CountryCard\";\r\n\r\nconst Ranking = ({ countries, topN }) => {\r\n  const totalDays = countries.reduce(function (acc, country) {\r\n    return acc + parseInt(country.time);\r\n  }, 0);\r\n\r\n  return (\r\n    <div className=\"flex-container\">\r\n      {countries.slice(0, topN).map((country, index) => (\r\n        <ContryCard\r\n          key={index}\r\n          rank={index + 1}\r\n          country={country}\r\n          totalDays={totalDays}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ranking;\r\n","\r\nexport const SampleData = [{\r\n\t\"name\": \"Australia\",\r\n\t\"Years\": \"16\",\r\n\t\"Months\": \"6\",\r\n\t\"Days\": \"0\",\r\n\t\"ISO3\": \"AUS\",\r\n\t\"time\": \"2370\"\r\n}, {\r\n\t\"name\": \"India\",\r\n\t\"Years\": \"7\",\r\n\t\"Months\": \"10\",\r\n\t\"Days\": \"15\",\r\n\t\"ISO3\": \"IND\",\r\n\t\"time\": \"1775\"\r\n}, {\r\n\t\"name\": \"Brazil\",\r\n\t\"Years\": \"2\",\r\n\t\"Months\": \"3\",\r\n\t\"Days\": \"15\",\r\n\t\"ISO3\": \"BRA\",\r\n\t\"time\": \"105\"\r\n}, {\r\n\t\"name\": \"Panama\",\r\n\t\"Years\": \"1\",\r\n\t\"Months\": \"2\",\r\n\t\"Days\": \"12\",\r\n\t\"ISO3\": \"PAN\",\r\n\t\"time\": \"72\"\r\n}, {\r\n\t\"name\": \"France\",\r\n\t\"Years\": \"1\",\r\n\t\"Months\": \"0\",\r\n\t\"Days\": \"12\",\r\n\t\"ISO3\": \"FRA\",\r\n\t\"time\": \"72\"\r\n}, {\r\n\t\"name\": \"Vietnam\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"2\",\r\n\t\"Days\": \"11\",\r\n\t\"ISO3\": \"VNM\",\r\n\t\"time\": \"71\"\r\n}, {\r\n\t\"name\": \"Peru\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"2\",\r\n\t\"Days\": \"3\",\r\n\t\"ISO3\": \"PER\",\r\n\t\"time\": \"63\"\r\n}, {\r\n\t\"name\": \"Ecuador\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"1\",\r\n\t\"Days\": \"7\",\r\n\t\"ISO3\": \"ECU\",\r\n\t\"time\": \"37\"\r\n}, {\r\n\t\"name\": \"Italy\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"1\",\r\n\t\"Days\": \"4\",\r\n\t\"ISO3\": \"ITA\",\r\n\t\"time\": \"34\"\r\n}, {\r\n\t\"name\": \"Spain\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"1\",\r\n\t\"Days\": \"2\",\r\n\t\"ISO3\": \"ESP\",\r\n\t\"time\": \"32\"\r\n}, {\r\n\t\"name\": \"Indonesia\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"\",\r\n\t\"Days\": \"28\",\r\n\t\"ISO3\": \"IDN\",\r\n\t\"time\": \"28\"\r\n}, {\r\n\t\"name\": \"Canada\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"\",\r\n\t\"Days\": \"28\",\r\n\t\"ISO3\": \"CAN\",\r\n\t\"time\": \"28\"\r\n}, {\r\n\t\"name\": \"Chile\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"\",\r\n\t\"Days\": \"20\",\r\n\t\"ISO3\": \"CHL\",\r\n\t\"time\": \"20\"\r\n}, {\r\n\t\"name\": \"India\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"\",\r\n\t\"Days\": \"19\",\r\n\t\"ISO3\": \"IND\",\r\n\t\"time\": \"19\"\r\n}, {\r\n\t\"name\": \"Turkey\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"\",\r\n\t\"Days\": \"17\",\r\n\t\"ISO3\": \"TUR\",\r\n\t\"time\": \"17\"\r\n}, {\r\n\t\"name\": \"Cambodia\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"\",\r\n\t\"Days\": \"16\",\r\n\t\"ISO3\": \"KHM\",\r\n\t\"time\": \"16\"\r\n}, {\r\n\t\"name\": \"Panama\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"\",\r\n\t\"Days\": \"15\",\r\n\t\"ISO3\": \"PAN\",\r\n\t\"time\": \"15\"\r\n}, {\r\n\t\"name\": \"Dominican Republic\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"\",\r\n\t\"Days\": \"7\",\r\n\t\"ISO3\": \"DOM\",\r\n\t\"time\": \"7\"\r\n}, {\r\n\t\"name\": \"Puerto Rico\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"\",\r\n\t\"Days\": \"7\",\r\n\t\"ISO3\": \"PRI\",\r\n\t\"time\": \"7\"\r\n}, {\r\n\t\"name\": \"Germany\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"\",\r\n\t\"Days\": \"6\",\r\n\t\"ISO3\": \"DEU\",\r\n\t\"time\": \"6\"\r\n}, {\r\n\t\"name\": \"Bolivia\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"\",\r\n\t\"Days\": \"6\",\r\n\t\"ISO3\": \"BOL\",\r\n\t\"time\": \"6\"\r\n}, {\r\n\t\"name\": \"Portugal\",\r\n\t\"Years\": \"\",\r\n\t\"Months\": \"\",\r\n\t\"Days\": \"3\",\r\n\t\"ISO3\": \"PRT\",\r\n\t\"time\": \"3\"\r\n}]\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport CSVReader from \"react-csv-reader\";\r\n\r\nimport Buttons from \"./Buttons\";\r\nimport MapChart from \"./MapChart\";\r\nimport Ranking from \"./Ranking\";\r\nimport { SampleData } from \"../data/SampleData\";\r\nimport \"../App.css\";\r\nimport \"./HomePage.css\";\r\n\r\nconst HomePage = () => {\r\n  const API_URL = \"https://restcountries.eu/rest/v2/alpha\";\r\n  const [content, setContent] = useState(\"\");\r\n  const [data, setData] = useState(\r\n    JSON.parse(localStorage.getItem(\"dataSet\")) || []\r\n  );\r\n  const [topN, setTopN] = useState(parseInt(localStorage.getItem(\"topN\")) || 5);\r\n  const [CSVFormatError, setCSVFormatError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!data || data.length < 1) loadData(SampleData);\r\n  }, []);\r\n\r\n  const setTopNCountries = (num) => {\r\n    localStorage.setItem(\"topN\", num);\r\n    setTopN(num);\r\n  };\r\n\r\n  const loadData = (data) => {\r\n    const valid = data.reduce((acc, row) => {\r\n      return acc && row.time && row.ISO3;\r\n    }, true);\r\n    if (valid) {\r\n      const iso3 = data.reduce((acc, row) => {\r\n        return `${acc}${row.ISO3};`;\r\n      }, \"\");\r\n      fetch(`${API_URL}?codes=${iso3}`)\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            let merged = [];\r\n\r\n            for (let i = 0; i < result.length; i++) {\r\n              merged.push({\r\n                ...result[i],\r\n                ...data.find(\r\n                  (itmInner) => itmInner.ISO3 === result[i].alpha3Code\r\n                ),\r\n              });\r\n            }\r\n            setData(merged);\r\n            localStorage.setItem(\"dataSet\", JSON.stringify(merged));\r\n          },\r\n          (error) => {\r\n            console.log(\"Error fetching countries data: \", error);\r\n            setData(data);\r\n          }\r\n        );\r\n    } else {\r\n      setCSVFormatError(\r\n        \"Invalid format, please make sure the file has headers 'time' and 'ISO3'.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const clearData = () => {\r\n    localStorage.removeItem(\"dataSet\");\r\n    setData([]);\r\n  };\r\n\r\n  const papaparseOptions = {\r\n    header: true,\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"center\">Where in the world?</h1>\r\n      {data.length > 0 ? (\r\n        <>\r\n          <div className=\"center\">\r\n            <Buttons topN={topN} setTopN={setTopNCountries} />\r\n            <button className=\"button\" onClick={() => clearData()}>\r\n              New data\r\n            </button>\r\n            <Ranking countries={data} topN={topN} />\r\n          </div>\r\n          <div>\r\n            <MapChart setTooltipContent={setContent} travelData={data} />\r\n            <ReactTooltip>{content}</ReactTooltip>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p>\r\n            Let's see where in the world have you spent your life. Upload a data\r\n            file and find out!\r\n          </p>\r\n          <CSVReader\r\n            onFileLoaded={(data, fileInfo) => loadData(data, fileInfo)}\r\n            parserOptions={papaparseOptions}\r\n            label=\"Upload file\"\r\n            cssLabelClass=\"button upload-button\"\r\n          />\r\n          {CSVFormatError && (\r\n            <strong className=\"error-msg\">{CSVFormatError}</strong>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport CountryPage from \"./components/CountryPage\";\r\nimport HomePage from \"./components/HomePage\";\r\n\r\nfunction App() {\r\n  console.log(process.env.PUBLIC_URL);\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/country/:iso3\">\r\n          <CountryPage />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <HomePage />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}